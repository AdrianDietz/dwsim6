<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADJT001" xml:space="preserve">
    <value>Si vous souhaitez que l'opération d'ajustement soit automatiquement résolue par la calculatrice, définissez la propriété «Ajustement simultané» sur «Vrai». De cette façon, vous n'aurez pas besoin d'ouvrir le Panneau de configuration et votre variable sera ajustée automatiquement à chaque fois que le schéma du procédé est calculé.</value>
  </data>
  <data name="BENV001" xml:space="preserve">
    <value>Si vous souhaitez ajouter des données expérimentales au diagramme, saisissez les données dans le tableau correspondant avant de demander le calcul.</value>
  </data>
  <data name="BENV002" xml:space="preserve">
    <value>The experimental data "y" column is used only in the xy diagrams. To show both experimental bubble and dew points in a T/P-xy diagram, enter all mole fractions in the "x" column.</value>
  </data>
  <data name="BENV003" xml:space="preserve">
    <value>Les données expérimentales peuvent être copiées et collées directement à partir de Microsoft Excel.</value>
  </data>
  <data name="CAPE001" xml:space="preserve">
    <value>Lors de l'exécution de simulations contenant des opérations unitaires CAPE-OPEN sur un autre ordinateur, assurez-vous que ces composants sont installés et enregistrés correctement sur celui-ci.</value>
  </data>
  <data name="CSTR001" xml:space="preserve">
    <value>Seules les réactions de type cinétique seront prises en compte par le CSTR.</value>
  </data>
  <data name="CSUO001" xml:space="preserve">
    <value>Pour obtenir de l'aide sur les scripts, regardez les exemples d'opérations unitaires de séparation membranaire et d'hydrocyclone, situés dans le dossier des exemples.</value>
  </data>
  <data name="DCOL001" xml:space="preserve">
    <value>It is recommended that the column propertiy editing be carried out with the calculator disabled.</value>
  </data>
  <data name="DCOL002" xml:space="preserve">
    <value>Lors de la modification des connexions de la colonne, n'oubliez pas de cliquer sur n'importe quelle cellule autre que celle en cours de modification, afin que les modifications soient reconnues par DWSIM.</value>
  </data>
  <data name="DCOL003" xml:space="preserve">
    <value>N'oubliez pas de rentrer la pression des étages intermédiaires de la colonne.</value>
  </data>
  <data name="FLSH001" xml:space="preserve">
    <value>Appuyez sur F5 sur n'importe quelle zone à l'intérieur du schéma de procédé pour démarrer un calcul complet.</value>
  </data>
  <data name="FLSH002" xml:space="preserve">
    <value>Utilisez l'outil de connexion rapide de la barre d'outils pour connecter rapidement des objets en appuyant sur la touche CTRL et en faisant glisser le curseur du premier au deuxième objet.</value>
  </data>
  <data name="FLSH003" xml:space="preserve">
    <value>Maintenez MAJ pendant l'initialisation du DWSIM pour réinitialiser les paramètres à leurs valeurs par défaut.</value>
  </data>
  <data name="FLSH004" xml:space="preserve">
    <value>See some specific help for the object being added by selecting it in the flowsheet and pressing the F1 key. This also works for Utilities.</value>
  </data>
  <data name="FLSH005" xml:space="preserve">
    <value>To view detailed results of the calculations in real time, enable console redirection and select a debug mode. You must restart DWSIM for the changes to take effect.</value>
  </data>
  <data name="FLSH006" xml:space="preserve">
    <value>Certains types d'objets affichent leur fenêtre d'édition principale lorsque vous double-cliquez dessus dans le schéma du procédé.</value>
  </data>
  <data name="FLSH007" xml:space="preserve">
    <value>Une fois la mise à jour des connexions des objets terminée, appelez le solveur de feuille de calcul en appuyant sur la touche F5.</value>
  </data>
  <data name="FLSH008" xml:space="preserve">
    <value>Si certaines fenêtres manquent, cliquez sur «Affichage» puis «Restaurer la mise en page».</value>
  </data>
  <data name="FOPT001" xml:space="preserve">
    <value>La fenêtre de l'optimiseur peut également être librement repositionnée, tout comme les sous-fenêtres du schéma du procédé.</value>
  </data>
  <data name="FSAN001" xml:space="preserve">
    <value>La fenêtre de l'outil d'analyse de sensibilité peut également être librement repositionnée.</value>
  </data>
  <data name="MSTR001" xml:space="preserve">
    <value>Vous pouvez modifier la composition d'un flux de matière par un double clic avec le bouton gauche de la souris.</value>
  </data>
  <data name="MSTR002" xml:space="preserve">
    <value>The material stream context menu offers some useful tools for managing its data, such as copying data from another stream, restoring original data, exporting the data to the clipboard, etc.</value>
  </data>
  <data name="MSTR003" xml:space="preserve">
    <value>Pour empêcher la fenêtre d'édition de composition de s'afficher après l'ajout d'un flux de matière, maintenez la touche MAJ enfoncée tout en la déposant dans la feuille de calcul.</value>
  </data>
  <data name="PENV001" xml:space="preserve">
    <value>Lorsque vous demandez un calcul, tous les types de diagramme sont calculés simultanément. Il n'est pas nécessaire de demander un autre calcul si vous souhaitez voir un diagramme différent à l'écran.</value>
  </data>
  <data name="PFR001" xml:space="preserve">
    <value>Seules les réactions de type cinétique seront prises en compte par le PFR.</value>
  </data>
  <data name="PURE001" xml:space="preserve">
    <value>Les propriétés affichées sur cet outil concernent uniquement les composés DWSIM. Les propriétés des composés CAPE-OPEN ne sont pas affichées ici.</value>
  </data>
  <data name="RCON001" xml:space="preserve">
    <value>Seules les réactions de conversion seront considérées par le réacteur de conversion.</value>
  </data>
  <data name="RECY001" xml:space="preserve">
    <value>Il est important de définir correctement l'emplacement du recycle dans le schéma du procédé, pour éviter des calculs inutiles. Insérez-le dans le point le plus proche où le flux de calcul revient à un point déjà calculé.</value>
  </data>
  <data name="REQL001" xml:space="preserve">
    <value>Le réacteur d'équilibre est utilisé partout où l'utilisateur a connaissance des réactions qui vont se produire. Lorsque ce n'est pas le cas, utilisez le réacteur Gibbs.</value>
  </data>
  <data name="RGIB001" xml:space="preserve">
    <value>Le réacteur de gibbs est utile lorsqu'il n'y a aucune information sur les réactions qui peuvent se produire dans le système. N'oubliez pas que le simple fait que les résultats indiquent qu'une réaction se produira ne signifie pas que cette réaction sera spontanée!</value>
  </data>
</root>